---

- name: "deploy backend play"
  hosts: web
  user: ubuntu
  gather_facts: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml

  tasks:
    # - name: "Copy source and node_modules"
    #   ansible.builtin.copy:
    #     src: ~/project/backend
    #     dest: ./

    # - name: "Copy built assets"
    #   ansible.builtin.copy:
    #     src: ~/workspace/backend/dist
    #     dest: ./backend

    - name: "Download the package"
      ansible.builtin.copy:
        src: ~/project/backend.tar.gz
        dest: ./

    - name: "Unpack the package"
      ansible.builtin.shell: |
        tar -xf backend.tar.gz

    - name: "Prepare the ENV vars"
      ansible.builtin.shell: |
        cd ~/backend
        env | grep TYPEORM_ > .env

  environment:
    - TYPEORM_CONNECTION: postgres
    - TYPEORM_MIGRATIONS_DIR: ./src/migrations
    - TYPEORM_ENTITIES: ./src/modules/domain/**/*.entity.ts
    - TYPEORM_MIGRATIONS: ./src/migrations/*.ts
    - TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST')}}"
    - TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT')}}"
    - TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE')}}"
    - TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME')}}"
    - TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD')}}"

  # roles:
  #   - deploy


- name: "deploy backend play"
  hosts: web
  user: ubuntu
  become: true
  become_method: sudo
  become_user: root
  gather_facts: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml

  # tasks:
  #   - name: "Start the service"
  #     ansible.builtin.shell: |
  #       systemctl start udapeople

  tasks:
    - name: "Start as a service"
      ansible.builtin.shell: |
        cd ~/backend

        docker run -d \
          --restart always \
          --network host \
          --env-file ./.env \
          -v $(pwd):/home/node/backend \
          node:13-alpine \
          sh -c 'cd /home/node/backend && npm i && npm start'

  environment:
    - TYPEORM_CONNECTION: postgres
    - TYPEORM_MIGRATIONS_DIR: ./src/migrations
    - TYPEORM_ENTITIES: ./src/modules/domain/**/*.entity.ts
    - TYPEORM_MIGRATIONS: ./src/migrations/*.ts
    - TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST')}}"
    - TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT')}}"
    - TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE')}}"
    - TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME')}}"
    - TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD')}}"

  # roles:
  #   - deploy
