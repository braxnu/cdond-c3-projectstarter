---

- name: "configuration play."
  hosts: web
  user: udapeople-admin
  become: true
  become_method: sudo
  become_user: root
  gather_facts: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml

  # pre_tasks:
  #   - name: "wait for DB host to become reachable/usable."
  #     ansible.builtin.wait_for:
  #       sleep: 10
  #       host: "{{ lookup('env', 'TYPEORM_HOST')}}"
  #       port: 3030

    # - name: "install python for Ansible."
    #   # Your code here

  tasks:
    - name: "Add NodeJS to PPA"
      ansible.builtin.shell:
        cmd: curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -

    - name: "Install NodeJS."
      ansible.builtin.apt:
        name: nodejs
        state: present

  # Get the environment variables from CircleCI and add to the EC2 instance
  environment:
    - TYPEORM_CONNECTION: postgres
    - TYPEORM_MIGRATIONS_DIR: ./src/migrations
    - TYPEORM_ENTITIES: ./src/modules/domain/**/*.entity.ts
    - TYPEORM_MIGRATIONS: ./src/migrations/*.ts
    - TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST')}}"
    - TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT')}}"
    - TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE')}}"
    - TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME')}}"
    - TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD')}}"

  roles:
    # Your code here
